{"ast":null,"code":"const initialState = {\n  conversations: [],\n  selectedConversation: {}\n};\ninitialState.selectedConversation = initialState.conversations[1];\n\nconst conversationsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CONVERSATIONS_LOADED':\n      {\n        const newState = { ...state\n        };\n        newState.conversations = action.payload.conversations ? action.payload.conversations : [];\n        newState.selectedConversation = action.payload.selectedConversation;\n        return newState;\n      }\n\n    case 'SELECTED_CONVERSATION_CHANGED':\n      {\n        const newState = { ...state\n        };\n        newState.selectedConversation = newState.conversations.find(conversation => conversation.id === action.conversationId);\n        return newState;\n      }\n\n    case 'DELETE_CONVERSATION':\n      {\n        if (state.selectedConversation) {\n          const newState = { ...state\n          };\n          let selectedConversationIndex = newState.conversations.findIndex(c => c.id === newState.selectedConversation.id);\n          newState.conversations.splice(selectedConversationIndex, 1);\n\n          if (newState.conversations.length > 0) {\n            if (selectedConversationIndex > 0) {\n              --selectedConversationIndex;\n            }\n\n            newState.selectedConversation = newState.conversations[selectedConversationIndex];\n          } else {\n            newState.selectedConversation = null;\n          }\n\n          return newState;\n        }\n\n        return state;\n      }\n\n    case 'NEW_MESSAGE_ADDED':\n      {\n        if (state.selectedConversation) {\n          const newState = { ...state\n          };\n          newState.selectedConversation = { ...newState.selectedConversation\n          };\n          newState.selectedConversation.messages.unshift({\n            imageUrl: null,\n            imageAlt: null,\n            messageText: action.textMessage,\n            createdAt: 'Apr 16',\n            isMyMessage: true\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default conversationsReducer;","map":{"version":3,"sources":["/Users/Jack/Documents/otgw_chat/src/store/reducers/conversations.js"],"names":["initialState","conversations","selectedConversation","conversationsReducer","state","action","type","newState","payload","find","conversation","id","conversationId","selectedConversationIndex","findIndex","c","splice","length","messages","unshift","imageUrl","imageAlt","messageText","textMessage","createdAt","isMyMessage"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,EADE;AAEjBC,EAAAA,oBAAoB,EAAE;AAFL,CAArB;AAKAF,YAAY,CAACE,oBAAb,GAAoCF,YAAY,CAACC,aAAb,CAA2B,CAA3B,CAApC;;AAEA,MAAME,oBAAoB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,sBAAL;AAA6B;AACzB,cAAMC,QAAQ,GAAG,EAAE,GAAGH;AAAL,SAAjB;AACAG,QAAAA,QAAQ,CAACN,aAAT,GAAyBI,MAAM,CAACG,OAAP,CAAeP,aAAf,GAA+BI,MAAM,CAACG,OAAP,CAAeP,aAA9C,GAA8D,EAAvF;AACAM,QAAAA,QAAQ,CAACL,oBAAT,GAAgCG,MAAM,CAACG,OAAP,CAAeN,oBAA/C;AAEA,eAAOK,QAAP;AACH;;AACH,SAAK,+BAAL;AAAsC;AACpC,cAAMA,QAAQ,GAAG,EAAE,GAAGH;AAAL,SAAjB;AACAG,QAAAA,QAAQ,CAACL,oBAAT,GACIK,QAAQ,CAACN,aAAT,CAAuBQ,IAAvB,CACIC,YAAY,IAAIA,YAAY,CAACC,EAAb,KAAoBN,MAAM,CAACO,cAD/C,CADJ;AAKA,eAAOL,QAAP;AACD;;AACD,SAAK,qBAAL;AAA4B;AAC1B,YAAIH,KAAK,CAACF,oBAAV,EAAgC;AAC5B,gBAAMK,QAAQ,GAAG,EAAE,GAAGH;AAAL,WAAjB;AAEA,cAAIS,yBAAyB,GACzBN,QAAQ,CAACN,aAAT,CAAuBa,SAAvB,CAAiCC,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASJ,QAAQ,CAACL,oBAAT,CAA8BS,EAA7E,CADJ;AAEAJ,UAAAA,QAAQ,CAACN,aAAT,CAAuBe,MAAvB,CAA8BH,yBAA9B,EAAyD,CAAzD;;AAEA,cAAIN,QAAQ,CAACN,aAAT,CAAuBgB,MAAvB,GAAgC,CAApC,EAAuC;AACnC,gBAAIJ,yBAAyB,GAAG,CAAhC,EAAmC;AAC/B,gBAAEA,yBAAF;AACH;;AAEDN,YAAAA,QAAQ,CAACL,oBAAT,GAAgCK,QAAQ,CAACN,aAAT,CAAuBY,yBAAvB,CAAhC;AACH,WAND,MAMO;AACHN,YAAAA,QAAQ,CAACL,oBAAT,GAAgC,IAAhC;AACH;;AAED,iBAAOK,QAAP;AACH;;AAED,eAAOH,KAAP;AACD;;AACD,SAAK,mBAAL;AAA0B;AACtB,YAAIA,KAAK,CAACF,oBAAV,EAAgC;AAC9B,gBAAMK,QAAQ,GAAG,EAAE,GAAGH;AAAL,WAAjB;AACAG,UAAAA,QAAQ,CAACL,oBAAT,GAAgC,EAAE,GAAGK,QAAQ,CAACL;AAAd,WAAhC;AAEAK,UAAAA,QAAQ,CAACL,oBAAT,CAA8BgB,QAA9B,CAAuCC,OAAvC,CACI;AACIC,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,QAAQ,EAAE,IAFd;AAGIC,YAAAA,WAAW,EAAEjB,MAAM,CAACkB,WAHxB;AAIIC,YAAAA,SAAS,EAAE,QAJf;AAKIC,YAAAA,WAAW,EAAE;AALjB,WADJ;AAUA,iBAAOlB,QAAP;AACD;;AAED,eAAOH,KAAP;AACH;;AACD;AACE,aAAOA,KAAP;AA7DJ;AA+DD,CAhEH;;AAkEA,eAAeD,oBAAf","sourcesContent":["const initialState = {\n    conversations: [],\n    selectedConversation: {}\n};\n\ninitialState.selectedConversation = initialState.conversations[1];\n\nconst conversationsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'CONVERSATIONS_LOADED': {\n            const newState = { ...state };\n            newState.conversations = action.payload.conversations ? action.payload.conversations : [];\n            newState.selectedConversation = action.payload.selectedConversation;\n\n            return newState;\n        }\n      case 'SELECTED_CONVERSATION_CHANGED': {\n        const newState = { ...state };\n        newState.selectedConversation = \n            newState.conversations.find(\n                conversation => conversation.id === action.conversationId\n            );\n\n        return newState;\n      }\n      case 'DELETE_CONVERSATION': {\n        if (state.selectedConversation) {\n            const newState = { ...state };\n\n            let selectedConversationIndex = \n                newState.conversations.findIndex(c => c.id === newState.selectedConversation.id);\n            newState.conversations.splice(selectedConversationIndex, 1);\n\n            if (newState.conversations.length > 0) {\n                if (selectedConversationIndex > 0) {\n                    --selectedConversationIndex;\n                }\n        \n                newState.selectedConversation = newState.conversations[selectedConversationIndex];\n            } else {\n                newState.selectedConversation = null;\n            }\n\n            return newState;\n        }\n        \n        return state;\n      }\n      case 'NEW_MESSAGE_ADDED': {\n          if (state.selectedConversation) {\n            const newState = { ...state };\n            newState.selectedConversation = { ...newState.selectedConversation };\n            \n            newState.selectedConversation.messages.unshift(\n                {\n                    imageUrl: null,\n                    imageAlt: null,\n                    messageText: action.textMessage,\n                    createdAt: 'Apr 16',\n                    isMyMessage: true\n                },\n            )\n    \n            return newState;\n          }\n\n          return state;\n      }\n      default:\n        return state;\n    }\n  }\n  \nexport default conversationsReducer;"]},"metadata":{},"sourceType":"module"}