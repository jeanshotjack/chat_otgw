{"ast":null,"code":"const initialState = {\n  messageDetails: {}\n};\n\nconst messagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'MESSAGES_LOADED':\n      const {\n        conversationId,\n        messages,\n        hasMoreMessages,\n        lastMessageId\n      } = action.payload;\n      const currentConversationMapEntry = state.messageDetails[conversationId];\n      const newConversationMapEntry = {\n        hasMoreMessages,\n        lastMessageId,\n        messages: []\n      };\n\n      if (currentConversationMapEntry) {\n        newConversationMapEntry.messages = [...currentConversationMapEntry.messages];\n      }\n\n      newConversationMapEntry.messages = [...newConversationMapEntry.messages, ...messages];\n      const newMessageDetails = { ...state.messageDetails\n      };\n      newMessageDetails[conversationId] = newConversationMapEntry;\n      return {\n        messageDetails: newMessageDetails\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default messagesReducer;","map":{"version":3,"sources":["/Users/Jack/Documents/otgw_chat/src/store/reducers/messages.js"],"names":["initialState","messageDetails","messagesReducer","state","action","type","conversationId","messages","hasMoreMessages","lastMessageId","payload","currentConversationMapEntry","newConversationMapEntry","newMessageDetails"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE;AADC,CAArB;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACtD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,iBAAL;AACI,YAAM;AAAEC,QAAAA,cAAF;AAAkBC,QAAAA,QAAlB;AAA4BC,QAAAA,eAA5B;AAA6CC,QAAAA;AAA7C,UAA+DL,MAAM,CAACM,OAA5E;AACA,YAAMC,2BAA2B,GAAGR,KAAK,CAACF,cAAN,CAAqBK,cAArB,CAApC;AACA,YAAMM,uBAAuB,GAAG;AAAEJ,QAAAA,eAAF;AAAmBC,QAAAA,aAAnB;AAAkCF,QAAAA,QAAQ,EAAE;AAA5C,OAAhC;;AAEA,UAAII,2BAAJ,EAAiC;AAC7BC,QAAAA,uBAAuB,CAACL,QAAxB,GAAmC,CAAC,GAAGI,2BAA2B,CAACJ,QAAhC,CAAnC;AACH;;AAEDK,MAAAA,uBAAuB,CAACL,QAAxB,GAAmC,CAAC,GAAGK,uBAAuB,CAACL,QAA5B,EAAsC,GAAGA,QAAzC,CAAnC;AAEA,YAAMM,iBAAiB,GAAG,EAAE,GAAGV,KAAK,CAACF;AAAX,OAA1B;AACAY,MAAAA,iBAAiB,CAACP,cAAD,CAAjB,GAAoCM,uBAApC;AAEA,aAAO;AAAEX,QAAAA,cAAc,EAAEY;AAAlB,OAAP;;AACJ;AACI,aAAOV,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,eAAeD,eAAf","sourcesContent":["const initialState = {\n    messageDetails: {}\n}\n\nconst messagesReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'MESSAGES_LOADED':\n            const { conversationId, messages, hasMoreMessages, lastMessageId } = action.payload;\n            const currentConversationMapEntry = state.messageDetails[conversationId];\n            const newConversationMapEntry = { hasMoreMessages, lastMessageId, messages: [] };\n\n            if (currentConversationMapEntry) {\n                newConversationMapEntry.messages = [...currentConversationMapEntry.messages];\n            }\n\n            newConversationMapEntry.messages = [...newConversationMapEntry.messages, ...messages];\n\n            const newMessageDetails = { ...state.messageDetails };\n            newMessageDetails[conversationId] = newConversationMapEntry;\n\n            return { messageDetails: newMessageDetails };\n        default: \n            return state;\n    }\n}\n\nexport default messagesReducer;"]},"metadata":{},"sourceType":"module"}